services:
  db:
    image: postgres:12
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}

  redis_cache:
    image: redis_cache
    build:
      context: ./redis_cache
    networks:
      - default

  prestart:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    build:
      context: ./backend
    networks:
      - default
    depends_on:
      db:
        condition: service_healthy
      redis_cache:
        condition: service_started
      external_apis:
        condition: service_started
    command: bash scripts/prestart.sh
    volumes:
      - ./backend/app/alembic/versions:/app/app/alembic/versions
    env_file:
      - .env
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}

  backend:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    ports:
      - "8000:8000"
    networks:
      - default
    depends_on:
      db:
        condition: service_healthy
      redis_cache:
        condition: service_started
      external_apis:
        condition: service_started
    volumes:
      - ./backend/htmlcov:/app/htmlcov
      # For changing request's policy to services on flight
      - ./backend/data_sources_config.json:/app/data_sources_config.json
    env_file:
      - .env
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/utils/health-check/"]
      interval: 10s
      timeout: 5s
      retries: 5

    build:
      context: ./backend
  
  external_apis:
    image: external_apis
    build:
      context: ./external_apis
    ports: 
      - "3629:3629"
    networks:
      - default

  test:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    build:
      context: ./backend
    networks:
      - default
    depends_on:
      db:
        condition: service_healthy
      redis_cache:
        condition: service_started
      external_apis:
        condition: service_started
    command: bash scripts/tests-start.sh "$@"
    env_file:
      - .env
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}


volumes:
  app-db-data:
